/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/popup.ts":
/*!**********************!*\
  !*** ./src/popup.ts ***!
  \**********************/
/***/ (() => {

eval("\n// Define the final data structure\nconst finalData = {\n    irctc_credentials: {},\n    journey_details: {},\n    extension_data: {\n        book_at_tatkal_time: true,\n    },\n    passenger_details: [],\n    infant_details: [],\n    contact_details: {},\n    gst_details: {\n        \"gstin-number\": \"\",\n        \"gstin-name\": \"\",\n        \"gstin-flat\": \"\",\n        \"gstin-street\": \"\",\n        \"gstin-area\": \"\",\n        \"gstin-PIN\": \"\",\n        \"gstin-City\": \"\",\n    },\n    payment_preferences: {\n        paymentType: \"\",\n    },\n    travel_preferences: {\n        travelInsuranceOpted: \"\",\n    },\n    other_preferences: {\n        autoUpgradation: false,\n        confirmberths: false,\n        coachId: \"\",\n        reservationChoice: \"\",\n    },\n};\n// Example lists (replace with actual data)\nconst stationList = [];\nconst classList = [];\nconst quotaList = [];\nconst passengerGenderList = [];\nconst infantGenderList = [];\nconst infantAge = [];\nconst countryList = [];\nconst reservationChoiceList = [];\n// Utility function for dropdowns\nfunction addDropdownOption(inputId, dropdownId, clickHandler, dataList, templateFn) {\n    const dropdown = document.querySelector(`#${dropdownId}`);\n    const input = document.querySelector(`#${inputId}`);\n    if (input && dropdown) {\n        input.addEventListener(\"focus\", () => {\n            dropdown.style.display = \"block\";\n        });\n        dropdown.innerHTML = dataList.map(templateFn).join(\"\");\n        const items = dropdown.querySelectorAll(\".dropdown-list-item\");\n        items.forEach((item) => item.addEventListener(\"click\", clickHandler));\n    }\n}\n// Utility function to add options to a select element\nfunction addSelectOption(selectId, dataList, templateFn) {\n    const select = document.querySelector(`#${selectId}`);\n    if (select) {\n        select.innerHTML = dataList.map(templateFn).join(\"\");\n    }\n}\n// Utility function for filtering dropdown items\nfunction filterDropdown(inputId, dropdownId, dataList) {\n    const input = document.querySelector(`#${inputId}`);\n    const dropdown = document.querySelector(`#${dropdownId}`);\n    if (input && dropdown) {\n        const searchText = input.value.toLowerCase();\n        const filteredItems = dataList.filter((item) => item.english_label.toLowerCase().includes(searchText));\n        dropdown.innerHTML = filteredItems\n            .map((q) => `<li data-english-label=\"${q.english_label}\" data-hindi-label=\"${q.hindi_label}\" data-station-code=\"${q.value}\" class=\"dropdown-list-item\">${q.english_label} - ${q.value}</li>`)\n            .join(\"\");\n        const items = dropdown.querySelectorAll(\".dropdown-list-item\");\n        items.forEach((item) => item.addEventListener(\"click\", () => { }));\n    }\n}\n// Initialize event listeners\nwindow.addEventListener(\"load\", () => {\n    addDropdownOption(\"from-station-input\", \"from-station-list\", setFromStation, stationList, (q) => `<li data-english-label=\"${q.english_label}\" data-hindi-label=\"${q.hindi_label}\" data-station-code=\"${q.value}\" class=\"dropdown-list-item\">${q.english_label} - ${q.value}</li>`);\n    addDropdownOption(\"destination-station-input\", \"destination-station-list\", setDestinationStation, stationList, (q) => `<li data-english-label=\"${q.english_label}\" data-hindi-label=\"${q.hindi_label}\" data-station-code=\"${q.value}\" class=\"dropdown-list-item\">${q.english_label} - ${q.value}</li>`);\n    addDropdownOption(\"journey-class-input\", \"journey-class-list\", setJourneyClass, classList, (q) => `<li class=\"dropdown-list-item\" data-label=\"${q.label}\" data-class=\"${q.value}\">${q.label}</li>`);\n    addDropdownOption(\"quota-input\", \"quota-list\", setQuota, quotaList, (q) => `<li class=\"dropdown-list-item\" data-label=\"${q.label}\" data-quota=\"${q.value}\">${q.label}</li>`);\n    addSelectOption(\"passenger-gender-1\", passengerGenderList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.value}\" data-label=\"${q.label}\" data-index=\"${i}\" data-gender=\"${q.value}\">${q.label}</option>`);\n    addSelectOption(\"passenger-gender-2\", passengerGenderList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.value}\" data-label=\"${q.label}\" data-index=\"${i}\" data-gender=\"${q.value}\">${q.label}</option>`);\n    addSelectOption(\"passenger-gender-3\", passengerGenderList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.value}\" data-label=\"${q.label}\" data-index=\"${i}\" data-gender=\"${q.value}\">${q.label}</option>`);\n    addSelectOption(\"passenger-gender-4\", passengerGenderList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.value}\" data-label=\"${q.label}\" data-index=\"${i}\" data-gender=\"${q.value}\">${q.label}</option>`);\n    addSelectOption(\"passenger-nationality-1\", countryList, (q, i) => `<option class=\"dropdown-list-item\" ${q.countryCode === \"IN\" ? \"selected\" : \"\"} value=\"${q.countryCode}\" data-label=\"${q.country}\" data-index=\"${i}\" data-nationality=\"${q.countryCode}\">${q.country}</option>`);\n    addSelectOption(\"passenger-nationality-2\", countryList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.countryCode}\" data-label=\"${q.country}\" data-index=\"${i}\" data-nationality=\"${q.countryCode}\">${q.country}</option>`);\n    addSelectOption(\"passenger-nationality-3\", countryList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.countryCode}\" data-label=\"${q.country}\" data-index=\"${i}\" data-nationality=\"${q.countryCode}\">${q.country}</option>`);\n    addSelectOption(\"passenger-nationality-4\", countryList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.countryCode}\" data-label=\"${q.country}\" data-index=\"${i}\" data-nationality=\"${q.countryCode}\">${q.country}</option>`);\n    addSelectOption(\"reservation-choice\", reservationChoiceList, (q, i) => `<option class=\"dropdown-list-item\" value=\"${q.value}\" data-label=\"${q.label}\" data-index=\"${i}\" data-choice=\"${q.value}\">${q.label}</option>`);\n    filterDropdown(\"from-station-input\", \"from-station-list\", stationList);\n    filterDropdown(\"destination-station-input\", \"destination-station-list\", stationList);\n});\nfunction setFromStation(event) {\n    throw new Error(\"Function not implemented.\");\n}\nfunction setDestinationStation(event) {\n    throw new Error(\"Function not implemented.\");\n}\nfunction setJourneyClass(event) {\n    throw new Error(\"Function not implemented.\");\n}\nfunction setQuota(event) {\n    throw new Error(\"Function not implemented.\");\n}\n\n\n//# sourceURL=webpack:///./src/popup.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/popup.ts"]();
/******/ 	
/******/ })()
;